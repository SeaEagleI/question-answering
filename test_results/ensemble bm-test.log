# combination test:        => [(2,3,4),0]==87.71
Testing 11 ensemble combinations:
[(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4), (1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4), (1, 2, 3, 4)]
(2, 3, 4)       87.7116 336.27s      √
(3, 4)          87.6527 351.88s
(2, 3)          87.4253 353.91s
(2, 4)          86.9704 344.41s
(1, 2, 3, 4)    86.9199 329.95s
(1, 3, 4)       86.5998 336.46s
(1, 2, 3)       86.5914 338.20s
(1, 2, 4)       85.9176 344.30s
(1, 3)          85.5133 347.50s
(1, 4)          84.6627 339.08s
(1, 2)          84.5953 338.39s

# thresh test: (two steps) => [(2,3,4),-3.1]==88.3601
Testing 18 values for param null_score_diff_threshold:
[-6.  -5.5 -5.  -4.5 -4.  -3.5 -3.  -2.5 -2.  -1.5 -1.  -0.5  0.   0.5
  1.   1.5  2.   2.5]
-6.0 87.7790 386.22s
-5.5 87.9306 316.77s
-5.0 88.0232 313.28s
-4.5 88.1159 314.35s
-4.0 88.2422 313.29s
-3.5 88.2422 313.13s         =>[
-3.0 88.3265 315.17s
-2.5 88.2675 315.08s            ]<=
-2.0 88.2254 313.53s
-1.5 88.0569 312.77s
-1.0 88.0485 312.35s
-0.5 87.8885 312.28s
0.0 87.7116 312.48s
0.5 87.5095 312.79s
1.0 87.2989 312.47s
1.5 87.1220 312.15s
2.0 86.9199 313.16s
2.5 86.7683 312.92s

Testing 9 values for param null_score_diff_threshold:
[-3.4 -3.3 -3.2 -3.1 -3.  -2.9 -2.8 -2.7 -2.6]
-3.4 88.3012 331.55s
-3.3 88.3517 332.13s
-3.2 88.3433 332.13s
-3.1 88.3601 332.62s                              √
-3.0 88.3265 331.13s
-2.9 88.3265 332.06s
-2.8 88.3180 332.27s
-2.7 88.2928 332.05s
-2.6 88.3096 332.46s
